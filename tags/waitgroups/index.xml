<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>waitgroups on Blog | Friends of GO</title>
    <link>https://blog.friendsofgo.tech/tags/waitgroups/</link>
    <description>Recent content in waitgroups on Blog | Friends of GO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Mon, 08 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.friendsofgo.tech/tags/waitgroups/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concurrencia en Golang: WaitGroups</title>
      <link>https://blog.friendsofgo.tech/posts/concurrencia-en-golang-waitgroups/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.friendsofgo.tech/posts/concurrencia-en-golang-waitgroups/</guid>
      <description>En la primera parte sobre concurrencia hablamos sobre cómo empezar a realizar concurrencia, y de algunas de las particularidades nativas que nos traía Go, como es la palabra go para lanzar las gorrutinas, y dentro del mundo de los canales, los unbuffered channels y como gestionarlos con select y bucles infinitos dentro de otras gorrutinas.
Por si todo esto fuera poco, nuestro compañero Joan, nos hablaba del modelo de actores, algo muy común en lenguajes como Elixir o Erlang, y cómo realizarlo en Go.</description>
    </item>
    
  </channel>
</rss>